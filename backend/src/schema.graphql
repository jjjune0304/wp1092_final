type Query {
  user(username: String!): User!
}

type Mutation {
  signup(email: String!, username: String!, password:String!): User!
  login(email: String!, password:String!): Token!
  logout: User!
  createQuestion(title: String!, body: String!): Question!
  createAnswer(body: String!, postID: String!): Answer!
  createComment(text: String!, postID: String!, postType: String!): Comment!
}

# type Subscription {
# }

type Token {
  token: String!
}

type User {
  id: ID!
  username: String!
  points: Int!
  email: String!
  createdAt: String!
}

type Question {
  id: ID!
  author: User!
  title: String!
  body: String!
  updatedAt: String!
}

type Answer {
  id: ID!
  question: Question! # remove if unness
  author: User!
  body: String!
  best: Boolean!
  updatedAt: String!
}

type Comment {
  id: ID!
  author: User!
  postType: String!
  text: String!
  updatedAt: String!
}

enum MutationType {
  CREATED
  UPDATED
}

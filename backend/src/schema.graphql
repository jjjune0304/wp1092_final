type Query {
  user(username: String!): User!
}

type Mutation {
  signup(email: String!, username: String!, password:String!): User!
  login(email: String!, password:String!): Token!
  logout: User!
  createQuestion(data: QuestionInput!): Question!
  createAnswer(data: AnswerInput!): Answer!
  createComment(data: CommentInput!): Comment!
}

# type Subscription {
# }

type Token {
  token: String
}

type User {
  id: ID!
  username: String!
  points: Int!
  email: String!
  createdAt: String!
  password: String!
}

type Question {
  id: ID!
  author: User!
  title: String!
  body: String!
  lastupdate: String!
}

type Answer {
  id: ID!
  author: User!
  body: String!
  best: Boolean!
  lastupdate: String!
}

type Comment {
  id: ID!
  author: User!
  body: String!
  lastupdate: String!
}

enum MutationType {
  CREATED
  UPDATED
}

# input UserInput {
#   email: String!
#   username: String!
#   password: String!
# }

input QuestionInput {
  title: String!
  body: String!
  author: ID!
}

input AnswerInput {
  body: String!
  author: ID!
  postID: ID!
}

input CommentInput {
  text: String!
  author: ID!
  postID: ID!
  postType: String!
}
